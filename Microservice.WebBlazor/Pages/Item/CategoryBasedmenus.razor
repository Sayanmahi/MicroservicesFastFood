@page "/item/categorybasedmenu/{catid:int}"
@inject NavigationManager nav
@inject IItemService db
@inject ITokenService tok

   
   
    <br />
    <br />
    
        @if (cat.Any())
        {
        
            <div class="summary">
        <h1><b>Menu</b></h1>
        <div class="col-4 offset-2">
            <NavLink href="@($"item/getall")" class="allitemsgreen" style="">Get All Items</NavLink>
        </div>
            @if(utype.Equals("Admin"))
        {
            <div class="col-4 offset-2">
                <NavLink href="@($"item/add")" class="allitemsbrown">Add New Item</NavLink>
            </div>
        }

        
                @foreach (var d in cat)
                    {
                            <div class="content">
                            <h2><b>@d.ProdName</b></h2>
                <div class="img-wt-des">
                            <img src="@d.ImageUrl" class="imggflex" />
                    <div class="desc">
                            <p>@d.Description</p>
                            </div>
                            </div>
                            <div class="left-div">
                            <h4>Rs. @d.Price.00</h4>
                            </div>
                           <br />
                            <br />
                            <div class="left-div">
                            
                               
                                    <NavLink href="@($"cart/addtocart/{d.Id}")" class="buttongreen">Add to Cart</NavLink>
                                
                             @if(utype.Equals("Admin"))
                    {
                         @if (d.IsActive == 0)
                            {
                                <NavLink class="buttonbrown" href="@($"item/active/{d.Id}")">Activate</NavLink>
                            }
                            else
                            {
                                <NavLink class="buttonbrown" href="@($"item/inactive/{d.Id}")">InActivate</NavLink>
                            }
                            <span>   </span>
                            <NavLink href="@($"item/edit/{d.Id}")" class="buttongreen">Edit</NavLink>
                                
                    }
                </div>

                <br />
                                <br />
                                
                        </div>
                        <hr />
                     
                    }
                    </div>
            
        }
        else{
        <h4 class="card-title text-black-info">No Menus found under this category. Please try other categories.</h4>
        }

@code {
    private List<Item> cat = new List<Item>();
    [Parameter]
    public int catid { get; set; }
    string utype = "";

    protected async override Task OnInitializedAsync()
    {
        utype = tok.GetUserType();
        string token = tok.GetUserToken();
        if(token.Equals(""))
        {
            token = await tok.GetAdminToken();
        }

        if (utype.Equals("Admin"))
        {
            ResponseDTO? res1 = await db.AdminGetItemsBasedOnCategory(catid, token);
            cat = JsonConvert.DeserializeObject<List<Item>>(Convert.ToString(res1.Result));
        }
        else
        {
            ResponseDTO? res = await db.GetItemsBasedOnCategory(catid, token);
            if (res.Message.Equals("Unauthorized"))
            {
                //await _jsrun.InvokeVoidAsync("ShowToastr", "error", "You are not Authorized.Register or Login first!");
                nav.NavigateTo("login/register");
            }
            if (res != null && res.IsSuccess == true && !utype.Equals("Admin"))
            {
                cat = JsonConvert.DeserializeObject<List<Item>>(Convert.ToString(res.Result));
            }
            else
            {
                //await _jsrun.InvokeVoidAsync("ShowToastr", "error", "You are not Authorized.Register or Login first!");
                nav.NavigateTo("login/register");
            }
        }
       
            
       
        
            
        


    }

}