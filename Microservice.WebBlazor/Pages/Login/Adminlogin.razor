@page "/login/loginadmin"
@inject ILoginService db
@inject NavigationManager nav
@inject IJSRuntime _jsrun
@inject ITokenService token
<div class="summary">
    <h2>Admin Login</h2>
    <EditForm Model="cat" OnValidSubmit="Create">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <lable>Email</lable>
            <InputText @bind-Value="cat.email" class="form-control" placeholder="example@gmail.com"></InputText>
        </div>

        <div class="form-group">
            <lable>Password</lable>
            <input type="password" @bind="cat.password" class="form-control"></input>
        </div>
        <div class="form-group py-2">
            <button class="btn btn-success" type="submit">Login</button>
        </div>
    </EditForm>
</div>

@code {
    private LoginDTO cat = new LoginDTO();
    private async Task Create()
    {
        var d = await db.LoginAdmin(cat);
        if (d.IsSuccess==true)
        {
            var t = Convert.ToString(d.Result);
            token.SetAdminToken(t);

            await _jsrun.InvokeVoidAsync("ShowToastr", "success", "Login Successful!");
            //nav.NavigateTo("login/logout");
            nav.NavigateTo("admin/orderprocess");
        }
        else
        {
            await _jsrun.InvokeVoidAsync("ShowToastr", "error", "You are not Admin");
            nav.NavigateTo("login/register");
        }
    }

}
